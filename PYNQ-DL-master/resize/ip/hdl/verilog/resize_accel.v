// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.1
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="resize_accel,hls_ip_2018_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=9.400000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=10,HLS_SYN_DSP=15,HLS_SYN_FF=4570,HLS_SYN_LUT=5522}" *)

module resize_accel (
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        src_TDATA,
        src_TLAST,
        dst_TDATA,
        dst_TLAST,
        src_TVALID,
        src_TREADY,
        dst_TVALID,
        dst_TREADY
);

parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_S_AXI_ADDR_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] src_TDATA;
input  [0:0] src_TLAST;
output  [23:0] dst_TDATA;
output  [0:0] dst_TLAST;
input   src_TVALID;
output   src_TREADY;
output   dst_TVALID;
input   dst_TREADY;

reg    ap_rst_n_inv;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire   [31:0] src_rows;
wire   [31:0] src_cols;
wire   [31:0] dst_rows;
wire   [31:0] dst_cols;
wire    Block_Mat_exit41_pro_U0_ap_start;
wire    Block_Mat_exit41_pro_U0_start_full_n;
wire    Block_Mat_exit41_pro_U0_ap_done;
wire    Block_Mat_exit41_pro_U0_ap_continue;
wire    Block_Mat_exit41_pro_U0_ap_idle;
wire    Block_Mat_exit41_pro_U0_ap_ready;
wire    Block_Mat_exit41_pro_U0_start_out;
wire    Block_Mat_exit41_pro_U0_start_write;
wire   [31:0] Block_Mat_exit41_pro_U0_dst_rows_out_din;
wire    Block_Mat_exit41_pro_U0_dst_rows_out_write;
wire   [31:0] Block_Mat_exit41_pro_U0_dst_cols_out_din;
wire    Block_Mat_exit41_pro_U0_dst_cols_out_write;
wire   [31:0] Block_Mat_exit41_pro_U0_p_src_rows_out_din;
wire    Block_Mat_exit41_pro_U0_p_src_rows_out_write;
wire   [31:0] Block_Mat_exit41_pro_U0_p_src_cols_out_din;
wire    Block_Mat_exit41_pro_U0_p_src_cols_out_write;
wire   [31:0] Block_Mat_exit41_pro_U0_p_dst_rows_out_din;
wire    Block_Mat_exit41_pro_U0_p_dst_rows_out_write;
wire   [31:0] Block_Mat_exit41_pro_U0_p_dst_cols_out_din;
wire    Block_Mat_exit41_pro_U0_p_dst_cols_out_write;
wire   [8:0] Block_Mat_exit41_pro_U0_ap_return_0;
wire   [9:0] Block_Mat_exit41_pro_U0_ap_return_1;
wire    ap_channel_done_src_cols_cast_loc_ch;
wire    src_cols_cast_loc_ch_full_n;
reg    ap_sync_reg_channel_write_src_cols_cast_loc_ch;
wire    ap_sync_channel_write_src_cols_cast_loc_ch;
wire    ap_channel_done_src_rows_cast_loc_ch;
wire    src_rows_cast_loc_ch_full_n;
reg    ap_sync_reg_channel_write_src_rows_cast_loc_ch;
wire    ap_sync_channel_write_src_rows_cast_loc_ch;
wire    axis2xfMat_U0_ap_start;
wire    axis2xfMat_U0_ap_done;
wire    axis2xfMat_U0_ap_continue;
wire    axis2xfMat_U0_ap_idle;
wire    axis2xfMat_U0_ap_ready;
wire   [23:0] axis2xfMat_U0_p_src_data_V_din;
wire    axis2xfMat_U0_p_src_data_V_write;
wire    axis2xfMat_U0_src_TREADY;
wire    resize_U0_ap_start;
wire    resize_U0_ap_done;
wire    resize_U0_ap_continue;
wire    resize_U0_ap_idle;
wire    resize_U0_ap_ready;
wire    resize_U0_p_src_rows_read;
wire    resize_U0_p_src_cols_read;
wire    resize_U0_p_src_data_V_read;
wire    resize_U0_p_dst_rows_read;
wire    resize_U0_p_dst_cols_read;
wire   [23:0] resize_U0_p_dst_data_V_din;
wire    resize_U0_p_dst_data_V_write;
wire    xfMat2axis_U0_ap_start;
wire    xfMat2axis_U0_ap_done;
wire    xfMat2axis_U0_ap_continue;
wire    xfMat2axis_U0_ap_idle;
wire    xfMat2axis_U0_ap_ready;
wire    xfMat2axis_U0_p_dst_data_V_read;
wire   [23:0] xfMat2axis_U0_dst_TDATA;
wire    xfMat2axis_U0_dst_TVALID;
wire   [0:0] xfMat2axis_U0_dst_TLAST;
wire    xfMat2axis_U0_dst_rows_read;
wire    xfMat2axis_U0_dst_cols_read;
wire    ap_sync_continue;
wire    dst_rows_c_full_n;
wire   [31:0] dst_rows_c_dout;
wire    dst_rows_c_empty_n;
wire    dst_cols_c_full_n;
wire   [31:0] dst_cols_c_dout;
wire    dst_cols_c_empty_n;
wire    p_src_rows_c_full_n;
wire   [31:0] p_src_rows_c_dout;
wire    p_src_rows_c_empty_n;
wire    p_src_cols_c_full_n;
wire   [31:0] p_src_cols_c_dout;
wire    p_src_cols_c_empty_n;
wire    p_dst_rows_c_full_n;
wire   [31:0] p_dst_rows_c_dout;
wire    p_dst_rows_c_empty_n;
wire    p_dst_cols_c_full_n;
wire   [31:0] p_dst_cols_c_dout;
wire    p_dst_cols_c_empty_n;
wire   [8:0] src_rows_cast_loc_ch_dout;
wire    src_rows_cast_loc_ch_empty_n;
wire   [9:0] src_cols_cast_loc_ch_dout;
wire    src_cols_cast_loc_ch_empty_n;
wire    p_src_data_V_channel_full_n;
wire   [23:0] p_src_data_V_channel_dout;
wire    p_src_data_V_channel_empty_n;
wire    p_dst_data_V_channel_full_n;
wire   [23:0] p_dst_data_V_channel_dout;
wire    p_dst_data_V_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_axis2xfMat_U0_ap_ready;
wire    ap_sync_axis2xfMat_U0_ap_ready;
reg   [1:0] axis2xfMat_U0_ap_ready_count;
reg    ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready;
wire    ap_sync_Block_Mat_exit41_pro_U0_ap_ready;
reg   [1:0] Block_Mat_exit41_pro_U0_ap_ready_count;
wire   [0:0] start_for_resize_U0_din;
wire    start_for_resize_U0_full_n;
wire   [0:0] start_for_resize_U0_dout;
wire    start_for_resize_U0_empty_n;
wire   [0:0] start_for_xfMat2axis_U0_din;
wire    start_for_xfMat2axis_U0_full_n;
wire   [0:0] start_for_xfMat2axis_U0_dout;
wire    start_for_xfMat2axis_U0_empty_n;
wire    axis2xfMat_U0_start_full_n;
wire    axis2xfMat_U0_start_write;
wire    resize_U0_start_full_n;
wire    resize_U0_start_write;
wire    xfMat2axis_U0_start_full_n;
wire    xfMat2axis_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_src_cols_cast_loc_ch = 1'b0;
#0 ap_sync_reg_channel_write_src_rows_cast_loc_ch = 1'b0;
#0 ap_sync_reg_axis2xfMat_U0_ap_ready = 1'b0;
#0 axis2xfMat_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready = 1'b0;
#0 Block_Mat_exit41_pro_U0_ap_ready_count = 2'd0;
end

resize_accel_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
resize_accel_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .src_rows(src_rows),
    .src_cols(src_cols),
    .dst_rows(dst_rows),
    .dst_cols(dst_cols)
);

Block_Mat_exit41_pro Block_Mat_exit41_pro_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_Mat_exit41_pro_U0_ap_start),
    .start_full_n(Block_Mat_exit41_pro_U0_start_full_n),
    .ap_done(Block_Mat_exit41_pro_U0_ap_done),
    .ap_continue(Block_Mat_exit41_pro_U0_ap_continue),
    .ap_idle(Block_Mat_exit41_pro_U0_ap_idle),
    .ap_ready(Block_Mat_exit41_pro_U0_ap_ready),
    .start_out(Block_Mat_exit41_pro_U0_start_out),
    .start_write(Block_Mat_exit41_pro_U0_start_write),
    .src_rows(src_rows),
    .src_cols(src_cols),
    .dst_rows(dst_rows),
    .dst_cols(dst_cols),
    .dst_rows_out_din(Block_Mat_exit41_pro_U0_dst_rows_out_din),
    .dst_rows_out_full_n(dst_rows_c_full_n),
    .dst_rows_out_write(Block_Mat_exit41_pro_U0_dst_rows_out_write),
    .dst_cols_out_din(Block_Mat_exit41_pro_U0_dst_cols_out_din),
    .dst_cols_out_full_n(dst_cols_c_full_n),
    .dst_cols_out_write(Block_Mat_exit41_pro_U0_dst_cols_out_write),
    .p_src_rows_out_din(Block_Mat_exit41_pro_U0_p_src_rows_out_din),
    .p_src_rows_out_full_n(p_src_rows_c_full_n),
    .p_src_rows_out_write(Block_Mat_exit41_pro_U0_p_src_rows_out_write),
    .p_src_cols_out_din(Block_Mat_exit41_pro_U0_p_src_cols_out_din),
    .p_src_cols_out_full_n(p_src_cols_c_full_n),
    .p_src_cols_out_write(Block_Mat_exit41_pro_U0_p_src_cols_out_write),
    .p_dst_rows_out_din(Block_Mat_exit41_pro_U0_p_dst_rows_out_din),
    .p_dst_rows_out_full_n(p_dst_rows_c_full_n),
    .p_dst_rows_out_write(Block_Mat_exit41_pro_U0_p_dst_rows_out_write),
    .p_dst_cols_out_din(Block_Mat_exit41_pro_U0_p_dst_cols_out_din),
    .p_dst_cols_out_full_n(p_dst_cols_c_full_n),
    .p_dst_cols_out_write(Block_Mat_exit41_pro_U0_p_dst_cols_out_write),
    .ap_return_0(Block_Mat_exit41_pro_U0_ap_return_0),
    .ap_return_1(Block_Mat_exit41_pro_U0_ap_return_1)
);

axis2xfMat axis2xfMat_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(axis2xfMat_U0_ap_start),
    .ap_done(axis2xfMat_U0_ap_done),
    .ap_continue(axis2xfMat_U0_ap_continue),
    .ap_idle(axis2xfMat_U0_ap_idle),
    .ap_ready(axis2xfMat_U0_ap_ready),
    .p_src_data_V_din(axis2xfMat_U0_p_src_data_V_din),
    .p_src_data_V_full_n(p_src_data_V_channel_full_n),
    .p_src_data_V_write(axis2xfMat_U0_p_src_data_V_write),
    .src_TDATA(src_TDATA),
    .src_TVALID(src_TVALID),
    .src_TREADY(axis2xfMat_U0_src_TREADY),
    .src_rows(src_rows_cast_loc_ch_dout),
    .src_cols(src_cols_cast_loc_ch_dout)
);

resize resize_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(resize_U0_ap_start),
    .ap_done(resize_U0_ap_done),
    .ap_continue(resize_U0_ap_continue),
    .ap_idle(resize_U0_ap_idle),
    .ap_ready(resize_U0_ap_ready),
    .p_src_rows_dout(p_src_rows_c_dout),
    .p_src_rows_empty_n(p_src_rows_c_empty_n),
    .p_src_rows_read(resize_U0_p_src_rows_read),
    .p_src_cols_dout(p_src_cols_c_dout),
    .p_src_cols_empty_n(p_src_cols_c_empty_n),
    .p_src_cols_read(resize_U0_p_src_cols_read),
    .p_src_data_V_dout(p_src_data_V_channel_dout),
    .p_src_data_V_empty_n(p_src_data_V_channel_empty_n),
    .p_src_data_V_read(resize_U0_p_src_data_V_read),
    .p_dst_rows_dout(p_dst_rows_c_dout),
    .p_dst_rows_empty_n(p_dst_rows_c_empty_n),
    .p_dst_rows_read(resize_U0_p_dst_rows_read),
    .p_dst_cols_dout(p_dst_cols_c_dout),
    .p_dst_cols_empty_n(p_dst_cols_c_empty_n),
    .p_dst_cols_read(resize_U0_p_dst_cols_read),
    .p_dst_data_V_din(resize_U0_p_dst_data_V_din),
    .p_dst_data_V_full_n(p_dst_data_V_channel_full_n),
    .p_dst_data_V_write(resize_U0_p_dst_data_V_write)
);

xfMat2axis xfMat2axis_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2axis_U0_ap_start),
    .ap_done(xfMat2axis_U0_ap_done),
    .ap_continue(xfMat2axis_U0_ap_continue),
    .ap_idle(xfMat2axis_U0_ap_idle),
    .ap_ready(xfMat2axis_U0_ap_ready),
    .p_dst_data_V_dout(p_dst_data_V_channel_dout),
    .p_dst_data_V_empty_n(p_dst_data_V_channel_empty_n),
    .p_dst_data_V_read(xfMat2axis_U0_p_dst_data_V_read),
    .dst_TDATA(xfMat2axis_U0_dst_TDATA),
    .dst_TVALID(xfMat2axis_U0_dst_TVALID),
    .dst_TREADY(dst_TREADY),
    .dst_TLAST(xfMat2axis_U0_dst_TLAST),
    .dst_rows_dout(dst_rows_c_dout),
    .dst_rows_empty_n(dst_rows_c_empty_n),
    .dst_rows_read(xfMat2axis_U0_dst_rows_read),
    .dst_cols_dout(dst_cols_c_dout),
    .dst_cols_empty_n(dst_cols_c_empty_n),
    .dst_cols_read(xfMat2axis_U0_dst_cols_read)
);

fifo_w32_d3_A dst_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_dst_rows_out_din),
    .if_full_n(dst_rows_c_full_n),
    .if_write(Block_Mat_exit41_pro_U0_dst_rows_out_write),
    .if_dout(dst_rows_c_dout),
    .if_empty_n(dst_rows_c_empty_n),
    .if_read(xfMat2axis_U0_dst_rows_read)
);

fifo_w32_d3_A dst_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_dst_cols_out_din),
    .if_full_n(dst_cols_c_full_n),
    .if_write(Block_Mat_exit41_pro_U0_dst_cols_out_write),
    .if_dout(dst_cols_c_dout),
    .if_empty_n(dst_cols_c_empty_n),
    .if_read(xfMat2axis_U0_dst_cols_read)
);

fifo_w32_d2_A p_src_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_p_src_rows_out_din),
    .if_full_n(p_src_rows_c_full_n),
    .if_write(Block_Mat_exit41_pro_U0_p_src_rows_out_write),
    .if_dout(p_src_rows_c_dout),
    .if_empty_n(p_src_rows_c_empty_n),
    .if_read(resize_U0_p_src_rows_read)
);

fifo_w32_d2_A p_src_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_p_src_cols_out_din),
    .if_full_n(p_src_cols_c_full_n),
    .if_write(Block_Mat_exit41_pro_U0_p_src_cols_out_write),
    .if_dout(p_src_cols_c_dout),
    .if_empty_n(p_src_cols_c_empty_n),
    .if_read(resize_U0_p_src_cols_read)
);

fifo_w32_d2_A p_dst_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_p_dst_rows_out_din),
    .if_full_n(p_dst_rows_c_full_n),
    .if_write(Block_Mat_exit41_pro_U0_p_dst_rows_out_write),
    .if_dout(p_dst_rows_c_dout),
    .if_empty_n(p_dst_rows_c_empty_n),
    .if_read(resize_U0_p_dst_rows_read)
);

fifo_w32_d2_A p_dst_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_p_dst_cols_out_din),
    .if_full_n(p_dst_cols_c_full_n),
    .if_write(Block_Mat_exit41_pro_U0_p_dst_cols_out_write),
    .if_dout(p_dst_cols_c_dout),
    .if_empty_n(p_dst_cols_c_empty_n),
    .if_read(resize_U0_p_dst_cols_read)
);

fifo_w9_d2_A src_rows_cast_loc_ch_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_ap_return_0),
    .if_full_n(src_rows_cast_loc_ch_full_n),
    .if_write(ap_channel_done_src_rows_cast_loc_ch),
    .if_dout(src_rows_cast_loc_ch_dout),
    .if_empty_n(src_rows_cast_loc_ch_empty_n),
    .if_read(axis2xfMat_U0_ap_ready)
);

fifo_w10_d2_A src_cols_cast_loc_ch_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_Mat_exit41_pro_U0_ap_return_1),
    .if_full_n(src_cols_cast_loc_ch_full_n),
    .if_write(ap_channel_done_src_cols_cast_loc_ch),
    .if_dout(src_cols_cast_loc_ch_dout),
    .if_empty_n(src_cols_cast_loc_ch_empty_n),
    .if_read(axis2xfMat_U0_ap_ready)
);

fifo_w24_d150_A p_src_data_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(axis2xfMat_U0_p_src_data_V_din),
    .if_full_n(p_src_data_V_channel_full_n),
    .if_write(axis2xfMat_U0_p_src_data_V_write),
    .if_dout(p_src_data_V_channel_dout),
    .if_empty_n(p_src_data_V_channel_empty_n),
    .if_read(resize_U0_p_src_data_V_read)
);

fifo_w24_d150_A p_dst_data_V_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(resize_U0_p_dst_data_V_din),
    .if_full_n(p_dst_data_V_channel_full_n),
    .if_write(resize_U0_p_dst_data_V_write),
    .if_dout(p_dst_data_V_channel_dout),
    .if_empty_n(p_dst_data_V_channel_empty_n),
    .if_read(xfMat2axis_U0_p_dst_data_V_read)
);

start_for_resize_U0 start_for_resize_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_resize_U0_din),
    .if_full_n(start_for_resize_U0_full_n),
    .if_write(Block_Mat_exit41_pro_U0_start_write),
    .if_dout(start_for_resize_U0_dout),
    .if_empty_n(start_for_resize_U0_empty_n),
    .if_read(resize_U0_ap_ready)
);

start_for_xfMat2akbM start_for_xfMat2akbM_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_xfMat2axis_U0_din),
    .if_full_n(start_for_xfMat2axis_U0_full_n),
    .if_write(Block_Mat_exit41_pro_U0_start_write),
    .if_dout(start_for_xfMat2axis_U0_dout),
    .if_empty_n(start_for_xfMat2axis_U0_empty_n),
    .if_read(xfMat2axis_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready <= ap_sync_Block_Mat_exit41_pro_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_axis2xfMat_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_axis2xfMat_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_axis2xfMat_U0_ap_ready <= ap_sync_axis2xfMat_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_src_cols_cast_loc_ch <= 1'b0;
    end else begin
        if (((Block_Mat_exit41_pro_U0_ap_done & Block_Mat_exit41_pro_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_src_cols_cast_loc_ch <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_src_cols_cast_loc_ch <= ap_sync_channel_write_src_cols_cast_loc_ch;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_src_rows_cast_loc_ch <= 1'b0;
    end else begin
        if (((Block_Mat_exit41_pro_U0_ap_done & Block_Mat_exit41_pro_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_src_rows_cast_loc_ch <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_src_rows_cast_loc_ch <= ap_sync_channel_write_src_rows_cast_loc_ch;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == Block_Mat_exit41_pro_U0_ap_ready) & (ap_sync_ready == 1'b1))) begin
        Block_Mat_exit41_pro_U0_ap_ready_count <= (Block_Mat_exit41_pro_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (1'b1 == Block_Mat_exit41_pro_U0_ap_ready))) begin
        Block_Mat_exit41_pro_U0_ap_ready_count <= (Block_Mat_exit41_pro_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((axis2xfMat_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        axis2xfMat_U0_ap_ready_count <= (axis2xfMat_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (axis2xfMat_U0_ap_ready == 1'b1))) begin
        axis2xfMat_U0_ap_ready_count <= (axis2xfMat_U0_ap_ready_count + 2'd1);
    end
end

assign Block_Mat_exit41_pro_U0_ap_continue = (ap_sync_channel_write_src_rows_cast_loc_ch & ap_sync_channel_write_src_cols_cast_loc_ch);

assign Block_Mat_exit41_pro_U0_ap_start = ((ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready ^ 1'b1) & ap_start);

assign Block_Mat_exit41_pro_U0_start_full_n = (start_for_xfMat2axis_U0_full_n & start_for_resize_U0_full_n);

assign ap_channel_done_src_cols_cast_loc_ch = ((ap_sync_reg_channel_write_src_cols_cast_loc_ch ^ 1'b1) & Block_Mat_exit41_pro_U0_ap_done);

assign ap_channel_done_src_rows_cast_loc_ch = ((ap_sync_reg_channel_write_src_rows_cast_loc_ch ^ 1'b1) & Block_Mat_exit41_pro_U0_ap_done);

assign ap_done = xfMat2axis_U0_ap_done;

assign ap_idle = (xfMat2axis_U0_ap_idle & resize_U0_ap_idle & (src_cols_cast_loc_ch_empty_n ^ 1'b1) & (src_rows_cast_loc_ch_empty_n ^ 1'b1) & axis2xfMat_U0_ap_idle & Block_Mat_exit41_pro_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Block_Mat_exit41_pro_U0_ap_ready = (ap_sync_reg_Block_Mat_exit41_pro_U0_ap_ready | Block_Mat_exit41_pro_U0_ap_ready);

assign ap_sync_axis2xfMat_U0_ap_ready = (axis2xfMat_U0_ap_ready | ap_sync_reg_axis2xfMat_U0_ap_ready);

assign ap_sync_channel_write_src_cols_cast_loc_ch = ((src_cols_cast_loc_ch_full_n & ap_channel_done_src_cols_cast_loc_ch) | ap_sync_reg_channel_write_src_cols_cast_loc_ch);

assign ap_sync_channel_write_src_rows_cast_loc_ch = ((src_rows_cast_loc_ch_full_n & ap_channel_done_src_rows_cast_loc_ch) | ap_sync_reg_channel_write_src_rows_cast_loc_ch);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = xfMat2axis_U0_ap_done;

assign ap_sync_ready = (ap_sync_axis2xfMat_U0_ap_ready & ap_sync_Block_Mat_exit41_pro_U0_ap_ready);

assign axis2xfMat_U0_ap_continue = 1'b1;

assign axis2xfMat_U0_ap_start = (src_rows_cast_loc_ch_empty_n & src_cols_cast_loc_ch_empty_n & (ap_sync_reg_axis2xfMat_U0_ap_ready ^ 1'b1) & ap_start);

assign axis2xfMat_U0_start_full_n = 1'b1;

assign axis2xfMat_U0_start_write = 1'b0;

assign dst_TDATA = xfMat2axis_U0_dst_TDATA;

assign dst_TLAST = xfMat2axis_U0_dst_TLAST;

assign dst_TVALID = xfMat2axis_U0_dst_TVALID;

assign resize_U0_ap_continue = 1'b1;

assign resize_U0_ap_start = start_for_resize_U0_empty_n;

assign resize_U0_start_full_n = 1'b1;

assign resize_U0_start_write = 1'b0;

assign src_TREADY = axis2xfMat_U0_src_TREADY;

assign start_for_resize_U0_din = 1'b1;

assign start_for_xfMat2axis_U0_din = 1'b1;

assign xfMat2axis_U0_ap_continue = 1'b1;

assign xfMat2axis_U0_ap_start = start_for_xfMat2axis_U0_empty_n;

assign xfMat2axis_U0_start_full_n = 1'b1;

assign xfMat2axis_U0_start_write = 1'b0;

endmodule //resize_accel
